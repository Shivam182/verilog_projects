`timescale 1ns/1ps

module tb_baugh_wooley_multiplier;

// declare inputs as reg and outputs as wires
reg A0, A1, A2, A3, B0, B1, B2, B3;
wire P0, P1, P2, P3, P4, P5, P6, P7;
reg A, B;
wire P;


// Instantiate the DUT
signed_multiplier BWSM(.A0(A0), .A1(A1), .A2(A2), .A3(A3), 
		       .B0(B0), .B1(B1), .B2(B2), .B3(B3),
		       .P0(P0), .P1(P1), .P2(P2), .P3(P3), 
		       .P4(P4), .P5(P5), .P6(P6), .P7(P7)); 


A = {A3, A2, A1, A0};
B = {B3, B2, B1, B0};
assign {P7, P6, P5, P4, P3, P2, P1, P0} = P;

// Provide stimulus using initial block
initial begin 


    A = 4'b0001; B = 4'b0011; #10;  // 1 * 3  = 3
    A = 4'b1101; B = 4'b0010; #10;  // -3 * 2 = -6
    A = 4'b1010; B = 4'b1010; #10;  // -6 * -6 = 36
    A = 4'b0111; B = 4'b0110; #10;  // 7 * 6  = 42
    A = 4'b1111; B = 4'b1111; #10;  // -1 * -1 = 1


end



// Monitor the changes 
initial begin 
	$monitor("Time=%0t | A=%b B=%b | P=%b", $time, A, B, P);
end



endmodule
